{
  "openapi": "3.0.0",
  "info": {
    "description": "Swagger Youcube",
    "version": "0.1.2",
    "title": "Youcube",
    "contact": {
      "name": "UUBoys"
    }
  },
  "tags": [
    {
      "name": "Authorization",
      "description": "/auth"
    },
    {
      "name": "Users",
      "description": "/users"
    },
    {
      "name": "Videos",
      "description": "/videos"
    },
    {
      "name": "Comments",
      "description": "/comment"
    },
    {
      "name": "Playlists",
      "description": "/playlists"
    },
    {
      "name": "Tags",
      "description": "/tags"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Tato cesta registruje nové uživatele\n",
        "operationId": "authregister",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string"
                        }
                      }
                    },
                    "jwt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Correct login, JWT returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string"
                        }
                      }
                    },
                    "jwt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Wrong email or password"
          }
        }
      }
    },
    "/users/{uuid}": {
      "get": {
        "summary": "Get user by UUID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of user"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    },
                    "videos": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Video"
                      }
                    },
                    "playlist": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Playlist"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No user found"
          }
        }
      }
    },
    "/users/update": {
      "post": {
        "summary": "Update logged in user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "uuid": {
                          "type": "string"
                        }
                      }
                    },
                    "jwt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No data to update (empty request body)"
          },
          "404": {
            "description": "No user found"
          }
        }
      }
    },
    "/videos": {
      "get": {
        "summary": "Get all videos",
        "tags": [
          "Videos"
        ],
        "responses": {
          "200": {
            "description": "Returns videos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "monetized": {
                        "type": "boolean"
                      },
                      "created": {
                        "type": "string"
                      },
                      "tag": {
                        "type": "integer"
                      },
                      "users": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/videos/{uuid}": {
      "get": {
        "summary": "Get video by UUID",
        "tags": [
          "Videos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of video"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Video by UUID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "monetized": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "integer"
                    },
                    "users": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "This video has not been found"
          }
        }
      },
      "post": {
        "summary": "Update video by UUID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "tags": [
          "Videos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of video"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned video object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "monetized": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "integer"
                    },
                    "users": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Video has not been found or the user is not authorized to edit it"
          }
        }
      },
      "delete": {
        "summary": "Delete video by UUID",
        "tags": [
          "Videos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of video"
          }
        ],
        "responses": {
          "200": {
            "description": "Video has been deleted"
          },
          "404": {
            "description": "Video has not been found or the user is not authorized to delete it"
          }
        }
      }
    },
    "/videos/create": {
      "post": {
        "summary": "Create a video",
        "tags": [
          "Videos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Creates a video and returns it",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "user_uuid": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "monetized": {
                      "type": "boolean"
                    },
                    "created": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/videos/{uuid}/comments": {
      "get": {
        "summary": "Get video comments",
        "tags": [
          "Videos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of video"
          }
        ],
        "responses": {
          "200": {
            "description": "Prints out all comments for given video",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string"
                      },
                      "video_uuid": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string"
                      },
                      "other_comments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string"
                            },
                            "video_uuid": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "created": {
                              "type": "string"
                            },
                            "users": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "uuid": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "users": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "uuid": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comment/create": {
      "post": {
        "summary": "Create comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment has been created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "parent_uuid": {
                      "type": "string",
                      "nullable": true
                    },
                    "user_uuid": {
                      "type": "string"
                    },
                    "video_uuid": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comment/{uuid}/update": {
      "post": {
        "summary": "Update Comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the comment"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "video_uuid": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Comment has not been found or not author of the comment"
          }
        }
      }
    },
    "/comment/{uuid}/delete": {
      "delete": {
        "summary": "Delete comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of the comment"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment has been deleted"
          },
          "404": {
            "description": "No comment found or no permission to delete"
          }
        }
      }
    },
    "/playlists/create": {
      "post": {
        "summary": "Create a playlist",
        "tags": [
          "Playlists"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlaylist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Playlist has been edited, returns updated playlist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "404": {
            "description": "Playlist has not been found or user is not authorized to edit"
          }
        }
      }
    },
    "/playlists/user/{uuid}": {
      "get": {
        "summary": "Get playlist by USER-UUID",
        "tags": [
          "Playlists"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of a user"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a playlist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "404": {
            "description": "Playlist has not been found"
          }
        }
      }
    },
    "/playlists/{uuid}": {
      "get": {
        "summary": "Get playlist by UUID",
        "tags": [
          "Playlists"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of playlist"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a playlist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "404": {
            "description": "Playlist has not been found"
          }
        }
      },
      "post": {
        "summary": "Edit a playlist",
        "tags": [
          "Playlists"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of playlist"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlaylist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Playlist has been edited, returns updated playlist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "404": {
            "description": "Playlist has not been found or user is not authorized to edit"
          }
        }
      },
      "delete": {
        "summary": "Delete a playlist",
        "tags": [
          "Playlists"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of playlist"
          }
        ],
        "responses": {
          "200": {
            "description": "Playlist has been deleted"
          },
          "404": {
            "description": "Playlist has not been found or user is not authorized to edit"
          }
        }
      }
    },
    "/playlists/{uuid}/add": {
      "post": {
        "summary": "Add videos to playlist",
        "tags": [
          "Playlists"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of playlist"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVideoToPlaylist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video has been added to playlist, returns updated playlist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "404": {
            "description": "Playlist/Video has not been found or user is not authorized to edit"
          }
        }
      }
    },
    "/playlists/{uuid}/remove": {
      "post": {
        "summary": "Remove videos to playlist",
        "tags": [
          "Playlists"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "UUID of playlist"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVideoToPlaylist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video has been removed from playlist, returns updated playlist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Playlist"
                }
              }
            }
          },
          "404": {
            "description": "Playlist/Video has not been found or user is not authorized to edit"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "summary": "Get all tags",
        "tags": [
          "Tags"
        ],
        "responses": {
          "200": {
            "description": "Returns all tags",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Youcube backend source",
    "url": "https://github.com/UUBoys/youcube-be"
  },
  "servers": [
    {
      "url": "https://localhost:3000/api"
    },
    {
      "url": "https://youcube-be.azurewebsites.net/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Video": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "user_uuid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "monetized": {
            "type": "boolean"
          },
          "created": {
            "type": "string"
          },
          "tag": {
            "type": "integer"
          }
        }
      },
      "UserRegister": {
        "type": "object",
        "required": [
          "email",
          "name",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email"
          },
          "name": {
            "type": "string",
            "description": "Name of user"
          },
          "password": {
            "type": "string",
            "description": "User password"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email"
          },
          "password": {
            "type": "string",
            "description": "User password"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "minProperties": 1,
        "properties": {
          "email": {
            "type": "string",
            "description": "User email"
          },
          "name": {
            "type": "string",
            "description": "Name of user"
          },
          "password": {
            "type": "string",
            "description": "User password"
          }
        }
      },
      "CommentCreate": {
        "type": "object",
        "required": [
          "video_uuid",
          "messsage"
        ],
        "properties": {
          "parent_uuid": {
            "type": "string",
            "description": "UUID of parent comment"
          },
          "video_uuid": {
            "type": "string",
            "description": "UUID of video to append the comment on"
          },
          "message": {
            "type": "string",
            "description": "Comment itself"
          }
        }
      },
      "CommentUpdate": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Comment itself"
          }
        }
      },
      "Playlist": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "Playlist UUID"
          },
          "name": {
            "type": "string",
            "description": "Name of the playlist"
          },
          "description": {
            "type": "string",
            "description": "Description of the playlist"
          },
          "playlist_videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          }
        }
      },
      "EditPlaylist": {
        "type": "object",
        "minProperties": 1,
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of playlist"
          },
          "description": {
            "type": "string",
            "description": "Description of playlist"
          }
        }
      },
      "CreatePlaylist": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of playlist"
          },
          "description": {
            "type": "string",
            "description": "Description of playlist"
          }
        }
      },
      "AddVideoToPlaylist": {
        "type": "object",
        "required": [
          "video_uuids",
          "playlist_uuid"
        ],
        "properties": {
          "video_uuids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "VideoCreate": {
        "type": "object",
        "required": [
          "title",
          "description",
          "url",
          "monetized",
          "tag"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the video"
          },
          "description": {
            "type": "string",
            "description": "Description of the video"
          },
          "url": {
            "type": "string",
            "description": "URL of the video"
          },
          "monetized": {
            "type": "boolean",
            "description": "True if the video is monetized"
          },
          "tag": {
            "type": "integer",
            "description": "ID of the specified tag"
          }
        }
      },
      "VideoUpdate": {
        "type": "object",
        "minProperties": 1,
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the video"
          },
          "description": {
            "type": "string",
            "description": "Description of the video"
          },
          "url": {
            "type": "string",
            "description": "URL of the video"
          },
          "monetized": {
            "type": "boolean",
            "description": "True if the video is monetized"
          },
          "tag": {
            "type": "integer",
            "description": "ID of the specified tag"
          }
        }
      }
    }
  }
}